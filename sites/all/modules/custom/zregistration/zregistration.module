<?php

/*
 * Implement hook help to provide help description for zregistration custom
 * module.
 */
function zregistration_help($path, $arg){
  switch ($path) {
    case "admin/help#zregistration":
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Z Registration is a module to understand about registration process.') . '</p>';
      return $output;
      break; 
  }
}

/*
 * Implement hook menu to customize quick access menu to module feature
 */
function zregistration_menu() {
    $items = array();
    
    $items['registration'] = array(
        'title' => 'Registered Users',
        'page callback' => 'zregistration_reg_page',
        'access arguments' => array('administer'),
    );
    
    $items['registration/generate_pdf/%'] = array(
        'title' => 'Student Information',
        'page callback' => 'zregistration_generate_pdf',
        'page arguments' => array(2),
        'access arguments' => array('access generate_pdf page'),
    );
    
    $items['registration/generate_excel'] = array(
        'title' => 'Student List',
        'page callback' => 'zregistration_generate_excel',
        'access arguments' => array('access generate_excel page'),
    );
    
    return $items;
}

function zregistration_permission(){
    return array(
        'access generate_pdf page' => array(
            'title' => 'Permission to PDF Generator page',
            'description' => '',
        ),
        'access generate_excel page' => array(
            'title' => 'Permission to Excel Gernerator page',
            'description' => '',
        ),
    );
}

/*
 * Page callback function to see registered users
 */
function zregistration_reg_page(){
    $query = db_select('users_roles', 'ur')
            ->fields('ur', array('uid'))
            ->condition('rid', 5, '=')
            ->execute()
            ->fetchCol();
    
    $records = user_load_multiple($query);
    
    $header = array(
        array('data' => 'Username', 'field' => 'username'),
        'status' => 'Status',
        'operations' => 'Operations',
        'pdf' => 'Download Information',
    );
    
    $space = str_repeat('&nbsp', 2);
    $rows = array();
    foreach($records as $user) {
        $status = $user->status;
        if ($status == 1) {
            $str_status = 'active';
        } else {
            $str_status = 'blocked';
        }
        $rows[$user->uid] = array(
            'username' => l($user->name, 'user/' . $user->uid),
            'status' => $str_status,
            'operations' =>l('main profile', 'profile-main/' . $user->uid) . $space . l('student profile', 'profile-student_profile/' . $user->uid),
            'pdf' => l('here', 'registration/generate_pdf/' . $user->uid),
        );
    }
    
    $out = theme('table', array('header' => $header, 'rows' => $rows, 'caption' => l('Add student', 'admin/people/create') . $space . l('Get List', '/registration/generate_excel')));
    
    return $out;
}

/*
 * alter form to validate registration courses
 */
function zregistration_form_alter(&$form, &$form_state, $form_id){
    if($form_id == 'profile2_edit_student_profile_form'){
        $form['profile_student_profile']
                ['field_registration']['und'][0]['field_reg_courses']['und']
                ['#element_validate'][] = 'zregistration_courses_validate';
    }
}

/*
 * This function validate semester in academic year and also registration courses.
 */
function zregistration_courses_validate($form, &$form_state){
    // get registration info section
    $registration_sets = $form_state['input']['profile_student_profile']['field_registration']['und'];
    // check if more than 1 registration set (semester)
    if (sizeof($registration_sets) > 1){
        // variable to store all intersect courses ID
        $intersect = array();
        // variable to store all courses on iteration
        $combine_array = array();
        // variable to store all courses error msg
        $courses_error_msg = '';
        // variable to store both academic year and semester
        $acad_ym = array();
        // loop through registration info set
        foreach ($registration_sets as $info) {
            // make an array of both academic year and semester
            $a = array(0 => $info['field_reg_academic_year']['und'], 1 => $info['field_reg_semester']['und']);
            // if that array is in our all year-semester array or not
            if (!in_array($a, $acad_ym)){
                // if no, put it in main array
                array_push($acad_ym, $a);
            } else {
                // if yes, alert error
                form_set_error('acad_year_semester_error', 'You cannot register to same year and same semester.');
            }
            
            // get course ID
            $course_id = $info['field_reg_courses']['und'];
            // if the big array that store course ID is empty
            if (empty($combine_array)) {
                // put the first one to it
                $combine_array = $course_id;
            } else {
                // compare the main array and course id, and put the intersect course to intersect array
                $intersect += array_intersect($combine_array, $course_id);
                $combine_array = array_merge($combine_array, $course_id);
            }
        }
        
        // if there is at least 1 course ID intersect, alert msg with course name
        if (sizeof($intersect) > 0){
            $courses_name = taxonomy_term_load_multiple($intersect);
            foreach($courses_name as $name){
                $courses_error_msg .= $name->name . ' is already taken in previous semester.<br>';
            }
            form_set_error('retake_courses_error', $courses_error_msg);
        }
    }
}

function zregistration_generate_pdf($uid){
    $mpdf_path = libraries_get_path('mpdf');
    if ($mpdf_path != ''){
        require_once libraries_get_path('mpdf') . '/mpdf.php';
        $css_path = drupal_get_path('module', 'zregistration') . '/css/custom.css';
// define value
        $profile = profile2_load_by_user($uid);
        
        $field_name = $profile['main']->field_full_name;
        $name = $field_name['und'][0]['value'];
        
        $field_gender = $profile['main']->field_reg_gender;
        $gender = $field_gender['und'][0]['value'];
        
        $field_dob = $profile['main']->field_reg_date_of_birth;
        $dob = date('d-m-Y', strtotime($field_dob['und'][0]['value']));
        
        $field_pob = $profile['main']->field_reg_place_of_birth;
        $pob = $field_pob['und'][0]['value'];
        
        $field_pschool = $profile['student_profile']->field_primary_school;
        $pschool = $field_pschool['und'][0]['value'];
        
        $field_eschool = $profile['student_profile']->field_elementary_school;
        $eschool = $field_eschool['und'][0]['value'];
        
        $field_hschool = $profile['student_profile']->field_high_school;
        $hschool = $field_hschool['und'][0]['value'];
        
        $field_major = $profile['student_profile']->field_department_pref1;
        $major_id = taxonomy_term_load($field_major['und'][0]['target_id']);
        $major = $major_id->name;
        
        // from here define the layout of form
        $html = '
            <!DOCTYPE html>
            <html>
            <head>
                <link rel="stylesheet" href="' . $css_path . '" >
                <title>Student Info</title>
            </head>
            <body>
            <h1 style="text-align: center;">Student Information</h1>
            <h3 style="background-color: #808080;">Section I: Student\'s Personal Details</h3>
            <table style="height: 200px; width: 815px;">
                <tbody>
                    <tr>
                        <td class="label">Name</td>
                        <td class="colon">:</td>
                        <td class="value">' . $name . '</td>
                    </tr>
                    <tr>
                        <td class="label">Gender</td>
                        <td class="colon">:</td>
                        <td class="value">' . $gender . '</td>
                    </tr>
                    <tr>
                        <td class="label">Date of Birth</td>
                        <td class="colon">:</td>
                        <td class="value">' . $dob . '</td>
                    </tr>
                    <tr>
                        <td class="label">Place of Birth</td>
                        <td class="colon">:</td>
                        <td class="value">' . $pob . '</td>
                    </tr>
                </tbody>
            </table>
            <h3 style="background-color: #808080;">Section II: Student\'s Educational Details</h3>
            <table style="height: 500px; width: 815px;">
                <tbody>
                    <tr>
                        <td class="label">Primary School</td>
                        <td class="colon">:</td>
                        <td class="value">' . $pschool . '</td>
                    </tr>
                    <tr>
                        <td class="label">Elementary School</td>
                        <td class="colon">:</td>
                        <td class="value" lang="km">' . $eschool . '</td>
                    </tr>
                    <tr>
                        <td class="label">High School</td>
                        <td class="colon">:</td>
                        <td class="value">' . $hschool . '</td>
                    </tr>
                    <tr>
                        <td class="label">Major</td>
                        <td class="colon">:</td>
                        <td class="value">' . $major . '</td>
                    </tr>
                    </tbody>
            </table>
            <h3 style="background-color: #808080;">Section III: Student\'s Courses Details</h3>
            <table style="height: 500px; width: 800px;">
                <tbody>
                    <tr>
                        <th class="academic">Academic Year</th>
                        <th class="semester">Semester</th>
                        <th class="courses">Courses</th>
                    </tr>';
        $field_reg = $profile["student_profile"]->field_registration;
        foreach($field_reg['und'] as $reg){
            $item = field_collection_item_load($reg['value']);
            $field_academic = $item->field_reg_academic_year;
            $academic_ys = $field_academic['und'][0]['value'];
            
            $field_semester = $item->field_reg_semester;
            $semester = $field_semester['und'][0]['value'];
            
            $html .= '<tr>
                        <td class="academic">' . $academic_ys . '</td>
                        <td class="semester">' . $semester . '</td>
                        ';
            
            $field_courses = $item->field_reg_courses;
            $courses = $field_courses['und'];
            $courses_collection = '';
            foreach ($courses as $course_id){
                $course_taxonomy = taxonomy_term_load($course_id['target_id']);
                $course_name = $course_taxonomy->name;
                $courses_collection .= $course_name . '<br>';
            }
            $html .= '<td class="courses">' . $courses_collection . '</td>
                    </tr>';
        }
        
        $html .= '
                </tbody>
            </table>
            </body>
            </html>';
    
        // from here generate the pdf
        $mpdf = new mPDF('s', 'A4');
        $mpdf->autoLangToFont = true;
        $mpdf->writeHTML($html);
        $mpdf->Output('student_info.pdf', 'I');
    } else {
        $css_path = drupal_get_path('module', 'zregistration') . '/css/custom.css';
        debug($css_path, 0, 1);
        $out = array(
            '#markup' => 'mPDF does not exist.',
        );
        return $out;
    }
}

function zregistration_generate_excel(){
    $phpexcel_path = libraries_get_path('phpexcel');
    if($phpexcel_path != ''){
        require_once $phpexcel_path . '/Classes/PHPExcel.php';
        
        $excel = new PHPExcel();
        $excel->setActiveSheetIndex(0)
                ->setCellValue('A1', 'Registered Students List')
                ->setCellValue('A3', 'Name')
                ->setCellValue('B3', 'Gender')
                ->setCellValue('C3', 'Date of Birth')
                ->setCellValue('D3', 'Place of Birth')
                ->setCellValue('E3', 'Primary School')
                ->setCellValue('F3', 'Elementary School')
                ->setCellValue('G3', 'High School')
                ->setCellValue('H3', 'Department');
        
        $excel->getActiveSheet()->mergeCells('A1:H1');
        $excel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal('center');
        
        $row = 4;
        
        // check $_GET['name_filter'] value
        if (empty($_GET['name_filter']) || !isset($_GET['name_filter']))
            $var1 = '';
        else
            $var1 = $_GET['name_filter'];
        // requery -> 
        if ($var1 == '1' || $var1 == 1){
            $var1 = '';
        }
        $query = db_query('SELECT users.uid AS uid '
                . 'FROM users LEFT JOIN profile '
                . 'ON users.uid = profile.uid '
                . 'AND (profile.type = \'student_profile\') '
                . 'INNER JOIN users_roles '
                . 'ON users.uid = users_roles.uid '
                . 'WHERE (( (users_roles.rid = \'5\') '
                . 'AND( (CONCAT_WS(\' \', users.name) '
                . 'LIKE \'%' . $var1 . '%\') )))')
                -> fetchCol();
        
        // define values
        foreach($query as $uid){
            $profile = profile2_load_by_user($uid);

            $field_name = $profile['main']->field_full_name;
            $name = $field_name['und'][0]['value'];

            $field_gender = $profile['main']->field_reg_gender;
            $gender = $field_gender['und'][0]['value'];

            $field_dob = $profile['main']->field_reg_date_of_birth;
            $dob = date('d-m-Y', strtotime($field_dob['und'][0]['value']));

            $field_pob = $profile['main']->field_reg_place_of_birth;
            $pob = $field_pob['und'][0]['value'];

            $field_pschool = $profile['student_profile']->field_primary_school;
            $pschool = $field_pschool['und'][0]['value'];

            $field_eschool = $profile['student_profile']->field_elementary_school;
            $eschool = $field_eschool['und'][0]['value'];

            $field_hschool = $profile['student_profile']->field_high_school;
            $hschool = $field_hschool['und'][0]['value'];

            $field_major = $profile['student_profile']->field_department_pref1;
            $major_id = taxonomy_term_load($field_major['und'][0]['target_id']);
            $major = $major_id->name;
            
            $excel->getActiveSheet()
                    ->setCellValue('A'.$row, $name)
                    ->setCellValue('B'.$row, $gender)
                    ->setCellValue('C'.$row, $dob)
                    ->setCellValue('D'.$row, $pob)
                    ->setCellValue('E'.$row, $pschool)
                    ->setCellValue('F'.$row, $eschool)
                    ->setCellValue('G'.$row, $hschool)
                    ->setCellValue('H'.$row, $major);
                    
            $row++;
        }
        
        foreach(range('A','H') as $columnID) {
            $excel->getActiveSheet()->getColumnDimension($columnID)
                    ->setAutoSize(true);
        }
        
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="students.xlsx"');
        header('Cache-Control: max-age=0');
        
        $file = PHPExcel_IOFactory::createWriter($excel, 'Excel2007');
        $file->save('php://output');
    } else {
        return 'No PHPExcel Library';
    }
}